[gd_scene load_steps=47 format=2]

[ext_resource path="res://world.gd" type="Script" id=1]
[ext_resource path="res://Background.tscn" type="PackedScene" id=2]
[ext_resource path="res://Map 1.tscn" type="PackedScene" id=3]
[ext_resource path="res://scene.gd" type="Script" id=4]
[ext_resource path="res://healthbar.gd" type="Script" id=5]
[ext_resource path="res://pixel.png" type="Texture" id=6]
[ext_resource path="res://health_bar_overlay.png" type="Texture" id=7]
[ext_resource path="res://Zombie/up0.png" type="Texture" id=8]
[ext_resource path="res://Zombie/up1.png" type="Texture" id=9]
[ext_resource path="res://Zombie/taunt0.png" type="Texture" id=10]
[ext_resource path="res://Zombie/taunt1.png" type="Texture" id=11]
[ext_resource path="res://Zombie/up2.png" type="Texture" id=12]
[ext_resource path="res://Zombie/up3.png" type="Texture" id=13]
[ext_resource path="res://Zombie/death0.png" type="Texture" id=14]
[ext_resource path="res://icon.png" type="Texture" id=15]
[ext_resource path="res://Zombie/move0.png" type="Texture" id=16]
[ext_resource path="res://Zombie/move1.png" type="Texture" id=17]
[ext_resource path="res://player_human.gd" type="Script" id=18]
[ext_resource path="res://Player/Poses/player_idle.png" type="Texture" id=19]
[ext_resource path="res://Player/Poses/player_jump.png" type="Texture" id=20]
[ext_resource path="res://Player/Poses/player_fall.png" type="Texture" id=21]
[ext_resource path="res://Player/Poses/player_duck.png" type="Texture" id=22]
[ext_resource path="res://Player/Poses/player_hurt.png" type="Texture" id=23]
[ext_resource path="res://Player/Poses/player_walk2.png" type="Texture" id=24]
[ext_resource path="res://Player/Poses/player_walk1.png" type="Texture" id=25]
[ext_resource path="res://speed.svg" type="Texture" id=26]
[ext_resource path="res://speedx.jpg" type="Texture" id=27]
[ext_resource path="res://Divine_Shield.png" type="Texture" id=28]
[ext_resource path="res://invinc.png" type="Texture" id=29]
[ext_resource path="res://fall.png" type="Texture" id=30]
[ext_resource path="res://parry.png" type="Texture" id=31]
[ext_resource path="res://freeze.png" type="Texture" id=32]
[ext_resource path="res://Main Menu/MainMenu.gd" type="Script" id=33]
[ext_resource path="res://Background/bg_layer1.png" type="Texture" id=34]
[ext_resource path="res://Main Menu/Main Menu Assets/Jumpman.png" type="Texture" id=35]
[ext_resource path="res://Main Menu/Main Menu Assets/Start.png" type="Texture" id=36]
[ext_resource path="res://Main Menu/Main Menu Assets/StartHover.png" type="Texture" id=37]
[ext_resource path="res://Main Menu/Main Menu Assets/Controls.png" type="Texture" id=38]
[ext_resource path="res://Main Menu/Main Menu Assets/ControlsHover.png" type="Texture" id=39]
[ext_resource path="res://gg.png" type="Texture" id=40]
[ext_resource path="res://Player/Poses/player_cheer1.png" type="Texture" id=41]
[ext_resource path="res://controlsFR.png" type="Texture" id=42]

[sub_resource type="GDScript" id=1]

script/source = "extends KinematicBody2D

const UP = Vector2(0,-1)
const GRAVITY = 20
var grav = 1
const ACCELERATION = 50
const SPEED = 200
var speedo = 1
var pastspeedo = speedo
const MAXSPEED = 400
const JUMP_HEIGHT = -550
var can_jump = false
var time
var health

var res
var motion = Vector2()
var right = KEY_D
var left = KEY_A
var up = KEY_W
var down = KEY_S
var parry = KEY_SPACE
var special
var speedtime = -1000
var shieldtime = 1000
var invincibletime = 1000
var canFastFall
var canParry
var invincible
var is_dead
var is_over = false
func _ready(player_1):
	time = 0
	health = 3
	canFastFall = false
	canParry = false
	invincible = false
	res = get_viewport_rect().size
	set_physics_process(true)
	#position.x = 1 *res.x / 3
	#position.y = 2 *res.y / 3

	if player_1:
		right = \"ui_right\"
		left = \"ui_left\"
		up = \"ui_up\"
		down = \"ui_down\"
		parry = \"ui_p\"
	else:
		right = \"ui_d\"
		left = \"ui_a\"
		up = \"ui_w\"
		down = \"ui_s\"
		parry = \"ui_space\"
	pass
	
#get_tree().get_root().get_node(\"scene_main_node/node_wanted\")	

func _physics_process(delta):
	time+=delta
	motion.x = 0
	if Input.is_action_pressed(right) and !is_over:
#		motion.x += ACCELERATION
#		if motion.x > MAXSPEED:
		motion.x = SPEED * speedo
	if Input.is_action_pressed(left) and !is_over:
#		motion.x -= ACCELERATION
#		if -motion.x > MAXSPEED:
		motion.x = -SPEED * speedo
	#if is_on_floor():
	if Input.is_action_just_pressed(up) and (is_on_floor() or can_jump) and !is_over:
		motion.y = JUMP_HEIGHT
		$AnimatedSprite.play(\"up\")
		can_jump = false
	if canFastFall and Input.is_action_just_pressed(down) and !is_over:
		grav = 50
		pass
	motion.y += GRAVITY * grav
	grav = 1
	if canParry and Input.is_action_just_pressed(parry):
		#parry	
		pass
		
	position.x = clamp(position.x, 0, res.x)
	position.y = clamp(position.y, 0, res.y)
	if motion.length() >= 1:
		$AnimatedSprite.play()
	else:
		$AnimatedSprite.stop()

	if motion.y < 0:
		$AnimatedSprite.animation = \"up\"
	if motion.x != 0:
		$AnimatedSprite.animation = \"move\"
		$AnimatedSprite.flip_h = motion.x < 0
	if motion.y > 0:
		$AnimatedSprite.animation = \"fall_down\"
		
	if position.x == 0:
		position.x = res.x - 1
	if position.y == 0:
		position.y = res.y - 50
		can_jump = true
	if position.x == res.x:
		position.x = 1
	if position.y == res.y:
		position.y = 50
		can_jump = false
	
	motion = move_and_slide(motion, UP)
	
	if (speedtime + 5.0) >= time:
		speedo = 4
	else:
		speedo = pastspeedo
	if (shieldtime + 30.0) <= time:
		health -= 1
		shieldtime = 10000
		print(health)
	if(invincibletime + 1) <= time:
		invincible = false
		
		
	var collision_info = move_and_collide(SPEED*delta*motion.normalized())
	if collision_info:
			var bodyHit = (collision_info.collider)
			if bodyHit.name == \"speed\":
				bodyHit.queue_free()
				if(SPEED * speedo <= MAXSPEED):
					speedo += .25
#			elif bodyHit.name == \"speedX\":
#				pastspeedo = speedo
#				speedtime = time
#				bodyHit.queue_free()
#			elif bodyHit.name == \"shield\":
#				shieldtime = time
#				health+=1
#				print(health)
#				bodyHit.queue_free()
#			elif bodyHit.name == \"invincibility\":
#				bodyHit.queue_free()
			elif bodyHit.name == \"fallspeed\":
				canFastFall = true
				bodyHit.queue_free()
#			elif bodyHit.name == \"parry\":
#				canParry = true
#				bodyHit.queue_free()
#			elif bodyHit.name == \"freeze\":
#				bodyHit.queue_free()
			elif bodyHit.name == \"human\":
				if(!invincible):
					if(bodyHit.position.y > position.y):
						health -= 1
					if(bodyHit.position.y < position.y):
						bodyHit.health -= 1
					invincible = true
					invincibletime = time
				print(\"Human Health \", health)
				print(\"Zombie Health \", bodyHit.health)
				position.x = res.x/3
				position.y = 2*res.y/3
				$healthbar.update(health,3)
				
			elif bodyHit.name == \"zombie\":
				if(!invincible):
					if(bodyHit.position.y > position.y):
						health -= 1
					if(bodyHit.position.y < position.y):
						bodyHit.health -= 1
					invincible = true
					invincibletime = time
				print(\"Zombie \", health)
				print(\"Human Health \", bodyHit.health)
				$healthbar.update(health,3)
				position.x = res.x/3
				position.y = 2*res.y/3
				
	if health == 0: #zombie win
		get_tree().get_root().get_node(\"world\").end_game()

func is_done():
	is_over = true

func get_health():
	return health
"

[sub_resource type="SpriteFrames" id=2]

animations = [ {
"frames": [ ExtResource( 8 ), ExtResource( 9 ) ],
"loop": false,
"name": "up",
"speed": 5.0
}, {
"frames": [ ExtResource( 10 ), ExtResource( 11 ) ],
"loop": true,
"name": "taunt",
"speed": 5.0
}, {
"frames": [ ExtResource( 12 ), ExtResource( 13 ) ],
"loop": false,
"name": "fall_down",
"speed": 5.0
}, {
"frames": [ ExtResource( 14 ), ExtResource( 15 ), null, ExtResource( 14 ), ExtResource( 15 ), null, ExtResource( 14 ), ExtResource( 15 ), null, ExtResource( 14 ), ExtResource( 15 ), null, ExtResource( 14 ), ExtResource( 15 ), null, ExtResource( 14 ), ExtResource( 15 ) ],
"loop": false,
"name": "dead",
"speed": 5.0
}, {
"frames": [ ExtResource( 16 ), ExtResource( 17 ) ],
"loop": true,
"name": "move",
"speed": 5.0
} ]
_sections_unfolded = [ "Resource" ]

[sub_resource type="GDScript" id=3]

script/source = "extends KinematicBody2D

const UP = Vector2(0,-1)
const GRAVITY = 20
var grav = 1
const ACCELERATION = 50
const SPEED = 200
var speedo = 1
var pastspeedo = speedo
const MAXSPEED = 400
const JUMP_HEIGHT = -550
var can_jump = false
var time
var health

var res
var motion = Vector2()
var right = KEY_D
var left = KEY_A
var up = KEY_W
var down = KEY_S
var parry = KEY_SPACE
var special
var speedtime = -1000
var shieldtime = 1000
var invincibletime = 1000
var canFastFall
var canParry
var invincible
var is_dead
var is_over = false
func _ready(player_1):
	time = 0
	health = 3
	canFastFall = false
	canParry = false
	invincible = false
	res = get_viewport_rect().size
	set_physics_process(true)
	#position.x = 1 *res.x / 3
	#position.y = 2 *res.y / 3

	if player_1:
		right = \"ui_right\"
		left = \"ui_left\"
		up = \"ui_up\"
		down = \"ui_down\"
		parry = \"ui_p\"
	else:
		right = \"ui_d\"
		left = \"ui_a\"
		up = \"ui_w\"
		down = \"ui_s\"
		parry = \"ui_space\"
	pass
	
#get_tree().get_root().get_node(\"scene_main_node/node_wanted\")	

func _physics_process(delta):
	time+=delta
	motion.x = 0
	if Input.is_action_pressed(right) and !is_over:
#		motion.x += ACCELERATION
#		if motion.x > MAXSPEED:
		motion.x = SPEED * speedo
	if Input.is_action_pressed(left) and !is_over:
#		motion.x -= ACCELERATION
#		if -motion.x > MAXSPEED:
		motion.x = -SPEED * speedo
	#if is_on_floor():
	if Input.is_action_just_pressed(up) and (is_on_floor() or can_jump) and !is_over:
		motion.y = JUMP_HEIGHT
		$AnimatedSprite.play(\"up\")
		can_jump = false
	if canFastFall and Input.is_action_just_pressed(down) and !is_over:
		grav = 50
		pass
	motion.y += GRAVITY * grav
	grav = 1
	if canParry and Input.is_action_just_pressed(parry):
		#parry	
		pass
		
	position.x = clamp(position.x, 0, res.x)
	position.y = clamp(position.y, 0, res.y)
	if motion.length() >= 1:
		$AnimatedSprite.play()
	else:
		$AnimatedSprite.stop()

	if motion.y < 0:
		$AnimatedSprite.animation = \"up\"
	if motion.x != 0:
		$AnimatedSprite.animation = \"move\"
		$AnimatedSprite.flip_h = motion.x < 0
	if motion.y > 0:
		$AnimatedSprite.animation = \"fall_down\"
		
	if position.x == 0:
		position.x = res.x - 1
	if position.y == 0:
		position.y = res.y - 50
		can_jump = true
	if position.x == res.x:
		position.x = 1
	if position.y == res.y:
		position.y = 50
		can_jump = false
	
	motion = move_and_slide(motion, UP)
	
	if (speedtime + 5.0) >= time:
		speedo = 4
	else:
		speedo = pastspeedo
	if (shieldtime + 30.0) <= time:
		health -= 1
		shieldtime = 10000
		print(health)
	if(invincibletime + 1) <= time:
		invincible = false
		
		
	var collision_info = move_and_collide(SPEED*delta*motion.normalized())
	if collision_info:
			var bodyHit = (collision_info.collider)
			if bodyHit.name == \"speed\":
				bodyHit.queue_free()
				if(SPEED * speedo <= MAXSPEED):
					speedo += .25
#			elif bodyHit.name == \"speedX\":
#				pastspeedo = speedo
#				speedtime = time
#				bodyHit.queue_free()
#			elif bodyHit.name == \"shield\":
#				shieldtime = time
#				health+=1
#				print(health)
#				bodyHit.queue_free()
#			elif bodyHit.name == \"invincibility\":
#				bodyHit.queue_free()
			elif bodyHit.name == \"fallspeed\":
				canFastFall = true
				bodyHit.queue_free()
#			elif bodyHit.name == \"parry\":
#				canParry = true
#				bodyHit.queue_free()
#			elif bodyHit.name == \"freeze\":
#				bodyHit.queue_free()
			elif bodyHit.name == \"human\":
				if(!invincible):
					if(bodyHit.position.y > position.y):
						health -= 1
					if(bodyHit.position.y < position.y):
						bodyHit.health -= 1
					invincible = true
					invincibletime = time
				print(\"Human Health \", health)
				print(\"Zombie Health \", bodyHit.health)
				$healthbar.update(health,3)
				position.x = 2 * res.x/3
				position.y = 2 * res.y/3
				
			elif bodyHit.name == \"zombie\":
				if(!invincible):
					if(bodyHit.position.y > position.y):
						health -= 1
					if(bodyHit.position.y < position.y):
						bodyHit.health -= 1
					invincible = true
					invincibletime = time
				print(\"Zombie \", health)
				print(\"Human Health \", bodyHit.health)
#				get_tree().get_root().get_node(\"player_human/healthbar\").update(health/3)
				$healthbar.update(health,3)
				position.x =2* res.x/3
				position.y =2* res.y/3
	if health == 0: #human win
		get_tree().get_root().get_node(\"world\").end_game()

func is_done():
	is_over = true
	
func get_health():
	return health
"

[sub_resource type="SpriteFrames" id=4]

animations = [ {
"frames": [ ExtResource( 19 ), ExtResource( 20 ) ],
"loop": true,
"name": "up",
"speed": 5.0
}, {
"frames": [ ExtResource( 21 ), ExtResource( 22 ) ],
"loop": false,
"name": "fall_down",
"speed": 5.0
}, {
"frames": [ ExtResource( 23 ), null, ExtResource( 23 ), null, ExtResource( 23 ), null, ExtResource( 23 ), null, ExtResource( 23 ), null, ExtResource( 23 ) ],
"loop": true,
"name": "dead",
"speed": 5.0
}, {
"frames": [ ExtResource( 24 ), ExtResource( 25 ) ],
"loop": true,
"name": "move",
"speed": 5.0
} ]

[node name="world" type="Node" index="0"]

script = ExtResource( 1 )

[node name="Background" parent="." index="0" instance=ExtResource( 2 )]

[node name="Map 1" parent="." index="1" instance=ExtResource( 3 )]

[node name="Player_zombie" type="Node" parent="." index="2"]

script = ExtResource( 4 )

[node name="zombie" type="KinematicBody2D" parent="Player_zombie" index="0"]

position = Vector2( 352.162, 331.317 )
rotation = 0.0136532
scale = Vector2( 0.3, 0.3 )
input_pickable = false
collision_layer = 1
collision_mask = 1
collision/safe_margin = 0.001
script = SubResource( 1 )
_sections_unfolded = [ "Collision", "Pause", "Transform", "Z Index", "collision" ]

[node name="healthbar" type="Node" parent="Player_zombie/zombie" index="0"]

script = ExtResource( 5 )

[node name="TextureRect2" type="TextureRect" parent="Player_zombie/zombie/healthbar" index="0"]

modulate = Color( 0.234659, 0.350531, 0.746094, 1 )
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 876.0
margin_top = 500.0
margin_right = 986.0
margin_bottom = 522.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = ExtResource( 6 )
expand = true
stretch_mode = 0
_sections_unfolded = [ "Rect", "Visibility" ]

[node name="health" type="TextureRect" parent="Player_zombie/zombie/healthbar" index="1"]

modulate = Color( 0.914062, 0.0516003, 0.0516003, 1 )
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 877.0
margin_top = 501.0
margin_right = 986.0
margin_bottom = 523.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = ExtResource( 6 )
expand = true
stretch_mode = 0
_sections_unfolded = [ "Rect", "Visibility" ]

[node name="health_bar_overlay" type="Sprite" parent="Player_zombie/zombie/healthbar" index="2"]

position = Vector2( 931.486, 512.049 )
scale = Vector2( 0.375, 0.525 )
texture = ExtResource( 7 )
_sections_unfolded = [ "Region", "Transform" ]

[node name="AnimatedSprite" type="AnimatedSprite" parent="Player_zombie/zombie" index="1"]

frames = SubResource( 2 )
animation = "up"
_sections_unfolded = [ "Transform" ]
__meta__ = {
"_edit_lock_": true
}

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Player_zombie/zombie" index="2"]

build_mode = 0
polygon = PoolVector2Array( -20.657, 53.6886, 0.646484, 53.3977, 0.470337, 40.5034, 2.69763, 39.3516, 3.43433, 52.2384, 24.4768, 53.3528, 20.4222, 43.8759, 27.1383, 42.9429, 30.9479, 34.4802, 27.0626, 16.8701, 29.309, 17.1199, 19.0303, 3.52234, 28.293, -16.2295, 25.9049, -26.8507, -0.562988, -35.1805, -19.7897, -26.5071, -24.5138, -2.89221, -21.8799, 5.20251, -29.5642, 17.363, -28.6781, 41.1819, -17.7306, 42.1539 )
__meta__ = {
"_edit_lock_": true
}

[node name="player_human" type="Node" parent="." index="3"]

script = ExtResource( 18 )

[node name="human" type="KinematicBody2D" parent="player_human" index="0"]

position = Vector2( 667.057, 330.549 )
input_pickable = false
collision_layer = 1
collision_mask = 1
collision/safe_margin = 0.001
script = SubResource( 3 )
_sections_unfolded = [ "Transform" ]

[node name="AnimatedSprite" type="AnimatedSprite" parent="player_human/human" index="0"]

scale = Vector2( 0.3, 0.3 )
frames = SubResource( 4 )
animation = "up"
_sections_unfolded = [ "Transform" ]
__meta__ = {
"_edit_lock_": true
}

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="player_human/human" index="1"]

build_mode = 0
polygon = PoolVector2Array( -6.04437, -10.6823, 7.16858, -10.8517, 6.49097, 2.02249, 9.37073, 11.3393, 8.52374, 13.8803, 4.11945, 12.1863, 2.76428, 15.5742, -4.68921, 16.76, -4.51978, 11.6781, -7.90771, 12.8639, -6.72192, 3.71646 )

[node name="healthbar" type="Node" parent="player_human/human" index="2"]

script = ExtResource( 5 )

[node name="TextureRect2" type="TextureRect" parent="player_human/human/healthbar" index="0"]

modulate = Color( 0.46141, 0.538671, 0.589844, 1 )
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 35.0
margin_top = 500.0
margin_right = 145.0
margin_bottom = 522.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = ExtResource( 6 )
expand = true
stretch_mode = 0
_sections_unfolded = [ "Rect", "Visibility" ]

[node name="health" type="TextureRect" parent="player_human/human/healthbar" index="1"]

modulate = Color( 0.914062, 0.0516003, 0.0516003, 1 )
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 36.0
margin_top = 500.0
margin_right = 145.0
margin_bottom = 522.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = ExtResource( 6 )
expand = true
stretch_mode = 0
_sections_unfolded = [ "Rect", "Visibility" ]

[node name="health_bar_overlay" type="Sprite" parent="player_human/human/healthbar" index="2"]

position = Vector2( 90.6032, 511.27 )
scale = Vector2( 0.375316, 0.52332 )
texture = ExtResource( 7 )
_sections_unfolded = [ "Transform", "Z Index" ]

[node name="powerUps" type="Node2D" parent="." index="4"]

editor/display_folded = true
position = Vector2( -148.556, -212.008 )

[node name="speed" type="RigidBody2D" parent="powerUps" index="0"]

position = Vector2( 663.402, 625.591 )
input_pickable = false
collision_layer = 1
collision_mask = 1
mode = 0
mass = 1.0
friction = 1.0
bounce = 0.0
gravity_scale = 1.0
custom_integrator = false
continuous_cd = 0
contacts_reported = 0
contact_monitor = false
sleeping = false
can_sleep = true
linear_velocity = Vector2( 0, 0 )
linear_damp = -1.0
angular_velocity = 0.0
angular_damp = -1.0
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="powerUps/speed" index="0"]

scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 26 )
_sections_unfolded = [ "Transform" ]
__meta__ = {
"_edit_lock_": true
}

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="powerUps/speed" index="1"]

build_mode = 0
polygon = PoolVector2Array( -45.4396, 28.6668, -45.4396, -27.3552, 45.7006, -26.3996, 46.6562, 27.3528 )
__meta__ = {
"_edit_lock_": true
}

[node name="speedX" type="RigidBody2D" parent="powerUps" index="1"]

position = Vector2( 1420.54, 314.715 )
input_pickable = false
collision_layer = 1
collision_mask = 1
mode = 0
mass = 1.0
friction = 1.0
bounce = 0.0
gravity_scale = 1.0
custom_integrator = false
continuous_cd = 0
contacts_reported = 0
contact_monitor = false
sleeping = false
can_sleep = true
linear_velocity = Vector2( 0, 0 )
linear_damp = -1.0
angular_velocity = 0.0
angular_damp = -1.0
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="powerUps/speedX" index="0"]

scale = Vector2( 0.2, 0.2 )
texture = ExtResource( 27 )
_sections_unfolded = [ "Transform" ]
__meta__ = {
"_edit_lock_": true
}

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="powerUps/speedX" index="1"]

build_mode = 0
polygon = PoolVector2Array( -28.5646, -32.6331, -28.0868, 28.7641, 27.3379, 28.6447, 26.8601, -30.6025, -27.609, -31.797 )
__meta__ = {
"_edit_lock_": true
}

[node name="shield" type="RigidBody2D" parent="powerUps" index="2"]

position = Vector2( 1499.64, 467.977 )
input_pickable = false
collision_layer = 1
collision_mask = 1
mode = 0
mass = 1.0
friction = 1.0
bounce = 0.0
gravity_scale = 1.0
custom_integrator = false
continuous_cd = 0
contacts_reported = 0
contact_monitor = false
sleeping = false
can_sleep = true
linear_velocity = Vector2( 0, 0 )
linear_damp = -1.0
angular_velocity = 0.0
angular_damp = -1.0
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="powerUps/shield" index="0"]

scale = Vector2( 0.3, 0.3 )
texture = ExtResource( 28 )
_sections_unfolded = [ "Transform" ]
__meta__ = {
"_edit_lock_": true
}

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="powerUps/shield" index="1"]

build_mode = 0
polygon = PoolVector2Array( -22.9767, 0.125732, -22.3795, -30.334, 20.8614, -29.7367, 22.7726, 28.7937, -22.6183, 28.5548 )
__meta__ = {
"_edit_lock_": true
}

[node name="invincibility" type="RigidBody2D" parent="powerUps" index="3"]

position = Vector2( 1460.62, 327.027 )
input_pickable = false
collision_layer = 1
collision_mask = 1
mode = 0
mass = 1.0
friction = 1.0
bounce = 0.0
gravity_scale = 1.0
custom_integrator = false
continuous_cd = 0
contacts_reported = 0
contact_monitor = false
sleeping = false
can_sleep = true
linear_velocity = Vector2( 0, 0 )
linear_damp = -1.0
angular_velocity = 0.0
angular_damp = -1.0
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="powerUps/invincibility" index="0"]

scale = Vector2( 0.2, 0.2 )
texture = ExtResource( 29 )
_sections_unfolded = [ "Transform" ]
__meta__ = {
"_edit_lock_": true
}

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="powerUps/invincibility" index="1"]

build_mode = 0
polygon = PoolVector2Array( -36.0478, -29.0147, -35.2116, 27.1268, 38.3695, 26.1712, 36.8167, -28.8952 )
__meta__ = {
"_edit_lock_": true
}

[node name="fallspeed" type="RigidBody2D" parent="powerUps" index="4"]

position = Vector2( 652.673, 293.649 )
input_pickable = false
collision_layer = 1
collision_mask = 1
mode = 0
mass = 1.0
friction = 1.0
bounce = 0.0
gravity_scale = 1.0
custom_integrator = false
continuous_cd = 0
contacts_reported = 0
contact_monitor = false
sleeping = false
can_sleep = true
linear_velocity = Vector2( 0, 0 )
linear_damp = -1.0
angular_velocity = 0.0
angular_damp = -1.0
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="powerUps/fallspeed" index="0"]

scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 30 )
_sections_unfolded = [ "Transform" ]
__meta__ = {
"_edit_lock_": true
}

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="powerUps/fallspeed" index="1"]

build_mode = 0
polygon = PoolVector2Array( -31.8904, -33.5099, 28.1564, -33.1922, 27.8387, 32.7323, -28.8723, 33.8443 )

[node name="parry" type="RigidBody2D" parent="powerUps" index="5"]

position = Vector2( 1405.6, 550.458 )
input_pickable = false
collision_layer = 1
collision_mask = 1
mode = 0
mass = 1.0
friction = 1.0
bounce = 0.0
gravity_scale = 1.0
custom_integrator = false
continuous_cd = 0
contacts_reported = 0
contact_monitor = false
sleeping = false
can_sleep = true
linear_velocity = Vector2( 0, 0 )
linear_damp = -1.0
angular_velocity = 0.0
angular_damp = -1.0
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="powerUps/parry" index="0"]

scale = Vector2( 2, 2 )
texture = ExtResource( 31 )
_sections_unfolded = [ "Transform" ]
__meta__ = {
"_edit_lock_": true
}

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="powerUps/parry" index="1"]

build_mode = 0
polygon = PoolVector2Array( -32.5213, -31.6161, 32.1324, -29.7099, 32.9267, 26.048, -32.2036, 28.9074 )

[node name="freeze" type="RigidBody2D" parent="powerUps" index="6"]

position = Vector2( 1656.01, 390.253 )
input_pickable = false
collision_layer = 1
collision_mask = 1
mode = 0
mass = 1.0
friction = 1.0
bounce = 0.0
gravity_scale = 1.0
custom_integrator = false
continuous_cd = 0
contacts_reported = 0
contact_monitor = false
sleeping = false
can_sleep = true
linear_velocity = Vector2( 0, 0 )
linear_damp = -1.0
angular_velocity = 0.0
angular_damp = -1.0
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="powerUps/freeze" index="0"]

scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 32 )
_sections_unfolded = [ "Transform" ]
__meta__ = {
"_edit_lock_": true
}

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="powerUps/freeze" index="1"]

build_mode = 0
polygon = PoolVector2Array( -37.7371, -37.1826, 41.3724, -37.1826, 30.8881, 35.5727, -36.3074, 34.143 )
__meta__ = {
"_edit_lock_": true
}

[node name="MainMenu" type="MarginContainer" parent="." index="5"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 4.0
margin_top = 9.0
margin_right = 1109.0
margin_bottom = 609.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
custom_constants/margin_right = 120
custom_constants/margin_top = 80
custom_constants/margin_left = 120
custom_constants/margin_bottom = 80
script = ExtResource( 33 )
_sections_unfolded = [ "Visibility", "custom_constants" ]

[node name="Sprite" type="Sprite" parent="MainMenu" index="0"]

position = Vector2( -499.422, -551.094 )
texture = ExtResource( 34 )
centered = false
_sections_unfolded = [ "Offset", "Transform" ]

[node name="VBoxContainer" type="VBoxContainer" parent="MainMenu" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 120.0
margin_top = 80.0
margin_right = 985.0
margin_bottom = 520.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
alignment = 0

[node name="Game Title" type="TextureRect" parent="MainMenu/VBoxContainer" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 865.0
margin_bottom = 120.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = ExtResource( 35 )
stretch_mode = 0
_sections_unfolded = [ "Size Flags" ]

[node name="HBoxContainer" type="HBoxContainer" parent="MainMenu/VBoxContainer" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 124.0
margin_right = 865.0
margin_bottom = 382.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
alignment = 0

[node name="VBoxContainer" type="VBoxContainer" parent="MainMenu/VBoxContainer/HBoxContainer" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 270.0
margin_bottom = 258.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 3
alignment = 0
_sections_unfolded = [ "Size Flags" ]
__meta__ = {
"_edit_group_": true
}

[node name="Start" type="TextureButton" parent="MainMenu/VBoxContainer/HBoxContainer/VBoxContainer" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 270.0
margin_bottom = 44.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
action_mode = 0
enabled_focus_mode = 2
shortcut = null
group = null
texture_normal = ExtResource( 36 )
texture_hover = ExtResource( 37 )
_sections_unfolded = [ "Textures" ]

[node name="Controls" type="TextureButton" parent="MainMenu/VBoxContainer/HBoxContainer/VBoxContainer" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 48.0
margin_right = 270.0
margin_bottom = 92.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
action_mode = 0
enabled_focus_mode = 2
shortcut = null
group = null
texture_normal = ExtResource( 38 )
texture_hover = ExtResource( 39 )
_sections_unfolded = [ "Textures" ]

[node name="CenterContainer" type="CenterContainer" parent="MainMenu/VBoxContainer/HBoxContainer" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 274.0
margin_right = 865.0
margin_bottom = 258.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 3
size_flags_vertical = 3
use_top_left = false
_sections_unfolded = [ "Size Flags" ]
__meta__ = {
"_edit_group_": true
}

[node name="Main Image" type="TextureRect" parent="MainMenu/VBoxContainer/HBoxContainer/CenterContainer" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 169.0
margin_right = 421.0
margin_bottom = 258.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = ExtResource( 27 )
stretch_mode = 0

[node name="TextureRect" type="TextureRect" parent="." index="6"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = -11.0
margin_top = 2.0
margin_right = 1014.0
margin_bottom = 610.0
rect_scale = Vector2( 1.25, 1.2 )
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 3
size_flags_vertical = 3
texture = ExtResource( 40 )
stretch_mode = 0
_sections_unfolded = [ "Rect", "Size Flags" ]

[node name="ZombieWin" type="TextureRect" parent="." index="7"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 489.0
margin_top = 242.0
margin_right = 569.0
margin_bottom = 357.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = ExtResource( 9 )
stretch_mode = 0

[node name="HumanWin" type="TextureRect" parent="." index="8"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 487.0
margin_top = 235.0
margin_right = 567.0
margin_bottom = 345.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = ExtResource( 41 )
stretch_mode = 0

[node name="Controls" type="TextureRect" parent="." index="9"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = -47.0
margin_right = 3864.0
margin_bottom = 2059.0
rect_scale = Vector2( 0.27, 0.29 )
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = ExtResource( 42 )
stretch_mode = 0
_sections_unfolded = [ "Rect" ]

[node name="Start2" type="TextureButton" parent="." index="10"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 384.0
margin_top = 528.0
margin_right = 654.0
margin_bottom = 572.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
texture_normal = ExtResource( 36 )
texture_hover = ExtResource( 37 )
_sections_unfolded = [ "Textures" ]
__meta__ = {
"_edit_lock_": true
}

[connection signal="frame_changed" from="player_human/human/AnimatedSprite" to="player_human/human" method="_on_AnimatedSprite_frame_changed"]

[connection signal="pressed" from="MainMenu/VBoxContainer/HBoxContainer/VBoxContainer/Start" to="MainMenu" method="_on_Start_pressed"]

[connection signal="pressed" from="MainMenu/VBoxContainer/HBoxContainer/VBoxContainer/Start" to="." method="_on_Start_pressed"]

[connection signal="pressed" from="MainMenu/VBoxContainer/HBoxContainer/VBoxContainer/Controls" to="." method="_on_Controls_pressed"]

[connection signal="pressed" from="Start2" to="." method="_on_Start2_pressed"]


